name: PR Bundle Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  verify-content:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Show changed files (debug)
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          git diff --name-status origin/${{ github.base_ref }}... | cat

      - name: Verify required files exist
        run: |
          set -e
          missing=0
          check() { [ -e "$1" ] || { echo "::error file=$1::missing"; missing=1; }; }
          # workflows
          check ".github/workflows/full-bundle-release.yml"
          check ".github/workflows/pr-bundle-check.yml"
          # product pages
          for f in \
            content/products/prints.md \
            content/products/large-format.md \
            content/products/photobooks.md \
            content/products/calendars.md \
            content/products/magnets.md \
            content/products/frames.md \
            content/pages/home.md \
            content/pages/pricing.md \
            content/pages/shipping.md \
            content/pages/faq.md \
            content/pricing/pricing.cz.csv \
            content/pricing/frames.cz.csv \
            content/pricing/frames.cz.json \
            content/shipping/shipping.cz.csv \
            docs/PhotobookPro_MASTER_BRIEF_v0_1_to_v88_0.txt
          do
            check "$f"
          done
          [ $missing -eq 0 ] || { echo "Some required files are missing"; exit 1; }

      - name: Quick CSV sanity checks
        run: |
          set -e
          # rámové CSV: kontrola hlavičky a počtu polí (6)
          awk -F';' 'NR==1 { if ($0 != "frame_type;profile;size;glazing;matting;price_czk") { print "Bad frames.cz.csv header: " $0; exit 1 } }
                      NR>1 { if (NF<6) { printf "Row %d has %d fields\n", NR, NF; exit 1 } }' content/pricing/frames.cz.csv
          # pricing.cz.csv aspoň existuje – detailní validace doděláme později

      - name: Optional — check for installer zip (informational only)
        continue-on-error: true
        run: |
          ls pbp_full_install*.zip || echo "No installer zip in PR (that’s fine)."
